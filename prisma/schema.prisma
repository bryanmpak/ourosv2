// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  String    @id @default(uuid())
  userId              String    @unique
  partnerId           String?
  isAccountLinked     Boolean   @default(false)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  
  linkRequest         AccountLink[]

  @@index([userId], name: "by_userId")
}

model AccountLink {
  id                  String    @id @default(uuid())
  userId              String    @unique
  userEmail           String?
  passcode            String?
  partnerId           String?
  partnerEmail        String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  user                User      @relation(fields: [userId], references: [userId])

  @@index([userId], name: "by_user")
  @@unique([userId, partnerEmail], name: "unique_user_partnerEmail")
}

model Letter {
  id                  String    @id @default(uuid())
  userId              String    @unique
  content             Json      @db.Json    
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Timer {
  id                  String    @id @default(uuid())
  userId              String    @unique
  timeElapsed         Int
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}